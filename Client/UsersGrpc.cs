// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: users.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Ntreev.Crema.Services.Users {
  internal static partial class IUserContextService
  {
    static readonly string __ServiceName = "ntreev.crema.services.users.IUserContextService";

    static readonly grpc::Marshaller<global::Ntreev.Crema.Services.Users.SubscribeRequest> __Marshaller_ntreev_crema_services_users_SubscribeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ntreev.Crema.Services.Users.SubscribeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ntreev.Crema.Services.Users.SubscribeReply> __Marshaller_ntreev_crema_services_users_SubscribeReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ntreev.Crema.Services.Users.SubscribeReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ntreev.Crema.Services.Users.EmptyRequest> __Marshaller_ntreev_crema_services_users_EmptyRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ntreev.Crema.Services.Users.EmptyRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ntreev.Crema.Services.Users.EmptyReply> __Marshaller_ntreev_crema_services_users_EmptyReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ntreev.Crema.Services.Users.EmptyReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ntreev.Crema.Services.Users.PollRequest> __Marshaller_ntreev_crema_services_users_PollRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ntreev.Crema.Services.Users.PollRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ntreev.Crema.Services.Users.PollReply> __Marshaller_ntreev_crema_services_users_PollReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ntreev.Crema.Services.Users.PollReply.Parser.ParseFrom);

    static readonly grpc::Method<global::Ntreev.Crema.Services.Users.SubscribeRequest, global::Ntreev.Crema.Services.Users.SubscribeReply> __Method_Subscribe = new grpc::Method<global::Ntreev.Crema.Services.Users.SubscribeRequest, global::Ntreev.Crema.Services.Users.SubscribeReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Subscribe",
        __Marshaller_ntreev_crema_services_users_SubscribeRequest,
        __Marshaller_ntreev_crema_services_users_SubscribeReply);

    static readonly grpc::Method<global::Ntreev.Crema.Services.Users.EmptyRequest, global::Ntreev.Crema.Services.Users.EmptyReply> __Method_Unsubscribe = new grpc::Method<global::Ntreev.Crema.Services.Users.EmptyRequest, global::Ntreev.Crema.Services.Users.EmptyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Unsubscribe",
        __Marshaller_ntreev_crema_services_users_EmptyRequest,
        __Marshaller_ntreev_crema_services_users_EmptyReply);

    static readonly grpc::Method<global::Ntreev.Crema.Services.Users.PollRequest, global::Ntreev.Crema.Services.Users.PollReply> __Method_Poll = new grpc::Method<global::Ntreev.Crema.Services.Users.PollRequest, global::Ntreev.Crema.Services.Users.PollReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Poll",
        __Marshaller_ntreev_crema_services_users_PollRequest,
        __Marshaller_ntreev_crema_services_users_PollReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Ntreev.Crema.Services.Users.UsersReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for IUserContextService</summary>
    public partial class IUserContextServiceClient : grpc::ClientBase<IUserContextServiceClient>
    {
      /// <summary>Creates a new client for IUserContextService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public IUserContextServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for IUserContextService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public IUserContextServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected IUserContextServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected IUserContextServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Ntreev.Crema.Services.Users.SubscribeReply Subscribe(global::Ntreev.Crema.Services.Users.SubscribeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Subscribe(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Ntreev.Crema.Services.Users.SubscribeReply Subscribe(global::Ntreev.Crema.Services.Users.SubscribeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Subscribe, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Ntreev.Crema.Services.Users.SubscribeReply> SubscribeAsync(global::Ntreev.Crema.Services.Users.SubscribeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Ntreev.Crema.Services.Users.SubscribeReply> SubscribeAsync(global::Ntreev.Crema.Services.Users.SubscribeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Subscribe, null, options, request);
      }
      public virtual global::Ntreev.Crema.Services.Users.EmptyReply Unsubscribe(global::Ntreev.Crema.Services.Users.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Unsubscribe(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Ntreev.Crema.Services.Users.EmptyReply Unsubscribe(global::Ntreev.Crema.Services.Users.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Unsubscribe, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Ntreev.Crema.Services.Users.EmptyReply> UnsubscribeAsync(global::Ntreev.Crema.Services.Users.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnsubscribeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Ntreev.Crema.Services.Users.EmptyReply> UnsubscribeAsync(global::Ntreev.Crema.Services.Users.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Unsubscribe, null, options, request);
      }
      public virtual global::Ntreev.Crema.Services.Users.PollReply Poll(global::Ntreev.Crema.Services.Users.PollRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Poll(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Ntreev.Crema.Services.Users.PollReply Poll(global::Ntreev.Crema.Services.Users.PollRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Poll, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Ntreev.Crema.Services.Users.PollReply> PollAsync(global::Ntreev.Crema.Services.Users.PollRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PollAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Ntreev.Crema.Services.Users.PollReply> PollAsync(global::Ntreev.Crema.Services.Users.PollRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Poll, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override IUserContextServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new IUserContextServiceClient(configuration);
      }
    }

  }
}
#endregion
