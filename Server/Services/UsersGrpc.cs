// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: users.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Ntreev.Crema.Services.Users {
  internal static partial class IUserContextService
  {
    static readonly string __ServiceName = "ntreev.crema.services.users.IUserContextService";

    static readonly grpc::Marshaller<global::Ntreev.Crema.Services.Users.SubscribeRequest> __Marshaller_ntreev_crema_services_users_SubscribeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ntreev.Crema.Services.Users.SubscribeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ntreev.Crema.Services.Users.SubscribeReply> __Marshaller_ntreev_crema_services_users_SubscribeReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ntreev.Crema.Services.Users.SubscribeReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ntreev.Crema.Services.Users.EmptyRequest> __Marshaller_ntreev_crema_services_users_EmptyRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ntreev.Crema.Services.Users.EmptyRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ntreev.Crema.Services.Users.EmptyReply> __Marshaller_ntreev_crema_services_users_EmptyReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ntreev.Crema.Services.Users.EmptyReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ntreev.Crema.Services.Users.PollRequest> __Marshaller_ntreev_crema_services_users_PollRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ntreev.Crema.Services.Users.PollRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Ntreev.Crema.Services.Users.PollReply> __Marshaller_ntreev_crema_services_users_PollReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Ntreev.Crema.Services.Users.PollReply.Parser.ParseFrom);

    static readonly grpc::Method<global::Ntreev.Crema.Services.Users.SubscribeRequest, global::Ntreev.Crema.Services.Users.SubscribeReply> __Method_Subscribe = new grpc::Method<global::Ntreev.Crema.Services.Users.SubscribeRequest, global::Ntreev.Crema.Services.Users.SubscribeReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Subscribe",
        __Marshaller_ntreev_crema_services_users_SubscribeRequest,
        __Marshaller_ntreev_crema_services_users_SubscribeReply);

    static readonly grpc::Method<global::Ntreev.Crema.Services.Users.EmptyRequest, global::Ntreev.Crema.Services.Users.EmptyReply> __Method_Unsubscribe = new grpc::Method<global::Ntreev.Crema.Services.Users.EmptyRequest, global::Ntreev.Crema.Services.Users.EmptyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Unsubscribe",
        __Marshaller_ntreev_crema_services_users_EmptyRequest,
        __Marshaller_ntreev_crema_services_users_EmptyReply);

    static readonly grpc::Method<global::Ntreev.Crema.Services.Users.PollRequest, global::Ntreev.Crema.Services.Users.PollReply> __Method_Poll = new grpc::Method<global::Ntreev.Crema.Services.Users.PollRequest, global::Ntreev.Crema.Services.Users.PollReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Poll",
        __Marshaller_ntreev_crema_services_users_PollRequest,
        __Marshaller_ntreev_crema_services_users_PollReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Ntreev.Crema.Services.Users.UsersReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of IUserContextService</summary>
    [grpc::BindServiceMethod(typeof(IUserContextService), "BindService")]
    public abstract partial class IUserContextServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Ntreev.Crema.Services.Users.SubscribeReply> Subscribe(global::Ntreev.Crema.Services.Users.SubscribeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Ntreev.Crema.Services.Users.EmptyReply> Unsubscribe(global::Ntreev.Crema.Services.Users.EmptyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Ntreev.Crema.Services.Users.PollReply> Poll(global::Ntreev.Crema.Services.Users.PollRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(IUserContextServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Subscribe, serviceImpl.Subscribe)
          .AddMethod(__Method_Unsubscribe, serviceImpl.Unsubscribe)
          .AddMethod(__Method_Poll, serviceImpl.Poll).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, IUserContextServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Subscribe, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ntreev.Crema.Services.Users.SubscribeRequest, global::Ntreev.Crema.Services.Users.SubscribeReply>(serviceImpl.Subscribe));
      serviceBinder.AddMethod(__Method_Unsubscribe, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ntreev.Crema.Services.Users.EmptyRequest, global::Ntreev.Crema.Services.Users.EmptyReply>(serviceImpl.Unsubscribe));
      serviceBinder.AddMethod(__Method_Poll, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ntreev.Crema.Services.Users.PollRequest, global::Ntreev.Crema.Services.Users.PollReply>(serviceImpl.Poll));
    }

  }
}
#endregion
